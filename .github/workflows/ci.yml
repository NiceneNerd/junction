name: Rust

on:
  push:
    branches:
      - 'master'
      - '!gh-pages'
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    env:
      # RUSTFLAGS: -Ctarget-feature=+crt-static
      RUST_BACKTRACE: 1
      MINGW_URL: https://ci-mirrors.rust-lang.org/rustc
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc, x86_64-pc-windows-gnu, i686-pc-windows-gnu]
        include:
          - target: x86_64-pc-windows-gnu
            archive: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z
            mingw_dir: mingw64
          - target: i686-pc-windows-gnu
            archive: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z
            mingw_dir: mingw32
    steps:
      - uses: actions/checkout@v2
      - run: |
          rustup toolchain install stable-${{ matrix.target }}
          rustup default stable-${{ matrix.target }}
      - name: Check out MinGW toolchain
        run: |
          set -x
          curl -sSf -O "${MINGW_URL}/${{ matrix.archive }}"
          7z x -y "${{ matrix.archive }}" -o/c/mingw
          rm "${{ matrix.archive }}"
          echo "##[add-path]C:\mingw\${{ matrix.mingw_dir }}\bin"
        shell: bash
        if: matrix.mingw_dir
      - run: cargo build
      - run: cargo build --all-targets
      - run: cargo test
      - if: failure()
        run: |
          Set-PSDebug -Trace 1
          Get-ChildItem -Path target\debug\junction-test-*\ | Select-Object FullName, Target
          Get-ChildItem -Path target\debug\junction-test-*\junction | Select-Object FullName, Target
        shell: powershell
      - if: failure()
        run: |
          dir /aL C:\
          dir /aL C:\Users
        shell: cmd

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo fmt -- --check

  rustdoc:
    runs-on: windows-latest
    if: github.event_name != 'pull_request' && github.event.ref == 'refs/heads/master'
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - run: |
          rustup toolchain install nightly
          rustup default nightly
      - run: cargo doc --all --no-deps # --document-private-items
      - run: echo '<meta http-equiv=refresh content=0;url=junction/index.html>' > target/doc/index.html
      # - run: |
      #     Get-Service ssh-agent
      #     Get-Service ssh-agent | Select StartType
      #     Set-Service ssh-agent -StartupType Manual
      #   shell: powershell
      - name: Commit docs to gh-pages branch
        working-directory: target/doc
        run: |
          # Bypassing Jekyll on GitHub Pages
          touch .nojekyll
          REV=$(git rev-parse --short HEAD)
          git init
          git config user.name "Actions"
          git config user.email "Actions@example.com"
          git config --global core.autocrlf false
          git add -A .
          git commit -qm "Documentation for ${{github.repository}}@${REV}"
        shell: bash
      - name: Push gh-pages to GitHub
        working-directory: target/doc
        run: |
          git remote add upstream https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/lzutao/junction
          git push -q upstream HEAD:gh-pages --force

  clippy:
    runs-on: windows-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - run: |
          rustup toolchain install nightly -c clippy
          rustup default nightly
      - run: |
          cargo check --all-targets --all-features
          git ls-files '*.rs' | xargs touch
      - run: cargo clippy --all-targets --all-features -- -Dwarnings