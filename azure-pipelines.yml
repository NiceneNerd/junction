trigger:
  branches:
    include: ['*']
    exclude: ['gh-pages']
  tags:
    exclude: ['*']

jobs:
  - job: 'Windows'
    pool:
      vmImage: windows-2019
    variables:
      MINGW_URL: https://rust-lang-ci2.s3.amazonaws.com/rust-ci-mirror
      RUSTFLAGS: -Ctarget-feature=+crt-static
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        x86_64-windows-msvc:
          TARGET: x86_64-pc-windows-msvc
        i686-windows-msvc:
          TARGET: i686-pc-windows-msvc
        # MinGW Builds
        x86_64-windows-gnu:
          TARGET: x86_64-pc-windows-gnu
          MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z
          MINGW_DIR: mingw64
        i686-windows-gnu:
          TARGET: i686-pc-windows-gnu
          MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z
          MINGW_DIR: mingw32
    steps:
      - powershell: Set-MpPreference -DisableRealtimeMonitoring $true
        displayName: Disable Windows Defender
      - template: ci/install-rust.yml
      - bash: |
          sh ci/install_mingw.sh
          echo '##vso[task.prependpath]C:\mingw\$(MINGW_DIR)\bin'
        displayName: Check out MinGW toolchain
        condition: variables['MINGW_DIR']
      - bash: |
          set -x
          rustup target add '$(TARGET)'
        displayName: Install target toolchain
        condition: ne(variables['TARGET'], 'x86_64-pc-windows-msvc')
      - bash: |
          set -ex
          gcc --version
          rustup -Vv
          cargo -Vv
          rustc -Vv
          cargo build -v --target '$(TARGET)'
          cargo test -v --target '$(TARGET)'
        displayName: Script
      - powershell: |
          Set-PSDebug -Trace 1
          Get-ChildItem -Path target\debug\junction-test-*\ | Select-Object FullName, Target
          Get-ChildItem -Path target\debug\junction-test-*\junction | Select-Object FullName, Target
        displayName: List junctions
        condition: failed()
      - bash: sh ci/gdb.sh
        displayName: After failure
        condition: failed()

  - job: 'Rustdoc'
    pool:
      vmImage: windows-2019
    condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    steps:
      - powershell: Set-MpPreference -DisableRealtimeMonitoring $true
        displayName: Disable Windows Defender
      - template: ci/install-rust.yml
      - bash: |
          set -ex
          cargo doc --all # --document-private-items
          echo '<meta http-equiv=refresh content=0;url=junction/index.html>' > target/doc/index.html
          cd target/doc
          du -sch
          git init
          git config --local user.name "Azure Pipelines"
          git config --local user.email "azuredevops@microsoft.com"
          git config --local core.autocrlf input
          git add .
          git commit --quiet -m 'Publishing GitHub Pages'
          set +x
          git remote add origin "https://lzutao:$(GH_DEPLOY_KEY)@github.com/lzutao/junction.git"
          set -x
          git push --force origin master:gh-pages
        displayName: 'Build and commit pages'

  - job: 'Clippy'
    pool:
      vmImage: windows-2019
    dependsOn: Windows
    steps:
      - powershell: Set-MpPreference -DisableRealtimeMonitoring $true
        displayName: Disable Windows Defender
      - template: ci/install-rust.yml
      - bash: cargo clippy --all --all-targets --all-features -- -Dwarnings
        displayName: Run Clippy

  - job: 'Rustfmt'
    pool:
      vmImage: Ubuntu-16.04
    steps:
      - template: ci/install-rust.yml
      - bash: cargo fmt --all -- --check
        displayName: Run rustfmt
